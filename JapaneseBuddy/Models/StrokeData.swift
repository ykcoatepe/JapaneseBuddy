import CoreGraphics

struct Stroke {
    var points: [CGPoint]
}

enum StrokeData {
    static func expectedCount(for glyph: String) -> Int {
        strokes(for: glyph).count
    }

    static func strokes(for glyph: String) -> [Stroke] {
        data[glyph] ?? []
    }

    private static func s(_ pts: [(CGFloat, CGFloat)]) -> Stroke {
        Stroke(points: pts.map { CGPoint(x: $0.0, y: $0.1) })
    }

    private static let data: [String: [Stroke]] = [
        "あ": [s([(0.2,0.2),(0.8,0.2)]), s([(0.5,0.2),(0.5,0.8)]), s([(0.3,0.5),(0.7,0.8)])],
        "い": [s([(0.4,0.2),(0.4,0.8)]), s([(0.6,0.2),(0.5,0.8)])],
        "う": [s([(0.3,0.2),(0.7,0.2)]), s([(0.6,0.2),(0.4,0.8),(0.7,0.8)])],
        "え": [s([(0.2,0.3),(0.8,0.3)]), s([(0.2,0.6),(0.8,0.6)]), s([(0.6,0.2),(0.4,0.8)])],
        "お": [s([(0.4,0.2),(0.4,0.8)]), s([(0.6,0.2),(0.6,0.8)]), s([(0.3,0.6),(0.7,0.6),(0.7,0.8)])],
        "か": [s([(0.3,0.2),(0.3,0.8)]), s([(0.3,0.5),(0.7,0.3)]), s([(0.6,0.2),(0.6,0.8)])],
        "き": [s([(0.3,0.2),(0.3,0.8)]), s([(0.5,0.2),(0.5,0.8)]), s([(0.2,0.5),(0.8,0.5)]), s([(0.6,0.2),(0.8,0.4)])],
        "く": [s([(0.3,0.2),(0.7,0.8)])],
        "け": [s([(0.3,0.2),(0.3,0.8)]), s([(0.5,0.2),(0.5,0.8)]), s([(0.3,0.5),(0.7,0.3)])],
        "こ": [s([(0.3,0.3),(0.8,0.3)]), s([(0.3,0.6),(0.8,0.6)])],
        "さ": [s([(0.3,0.2),(0.3,0.8)]), s([(0.3,0.5),(0.8,0.3)]), s([(0.6,0.2),(0.6,0.8)])],
        "し": [s([(0.4,0.2),(0.6,0.8)])],
        "す": [s([(0.2,0.3),(0.8,0.3)]), s([(0.6,0.2),(0.4,0.8),(0.7,0.8)])],
        "せ": [s([(0.3,0.2),(0.3,0.8)]), s([(0.3,0.5),(0.8,0.3)]), s([(0.5,0.2),(0.5,0.8)])],
        "そ": [s([(0.2,0.3),(0.8,0.3)]), s([(0.6,0.2),(0.4,0.8)])]
    ]
}

